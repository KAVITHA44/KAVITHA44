import pandas as pd
from sklearn.datasets import load_iris
iris=load_iris()

df = pd.DataFrame(iris['data'], columns=iris['feature_names'])
df.head()

df.info()

numSamples, numFeatures=iris.data.shape
print('\n NO OF SAMPLES:', numSamples)
print('\n NO OF FEATURES:', numFeatures)
print('\n TARGET NAMES:', list(iris.target_names))

from sklearn.model_selection import train_test_split
x_train, x_test, y_train, y_test= train_test_split(iris.data, iris.target,test_size=0.2, random_state=0)

import xgboost as xgb
train=xgb.DMatrix(x_train, label = y_train)
test=xgb.DMatrix(x_test, label = y_test)

param={
       'max_depth':4,
       'eta':0.3,
       'objective':'multi:softmax',
       'num_class':3}
epochs=10

model=xgb.train(param, train, epochs)
predictions=model.predict(test)
print('\n Predicted Values:', predictions)

from sklearn.metrics import accuracy_score
a=accuracy_score(y_test, predictions)
print('\n Accuracy score:', a)

from xgboost import plot_importance
from matplotlib import pyplot
plot_importance(model)
pyplot.show()

